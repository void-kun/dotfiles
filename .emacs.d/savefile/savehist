;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(grep-files-history grep-regexp-history coding-system-history read-number-history counsel-git-history yes-or-no-p-history query-replace-history anzu--history goto-line-history counsel-describe-symbol-history counsel-locate-history ivy-history swiper-history counsel-M-x-history which-key-keymap-history minibuffer-history buffer-name-history compile-history file-name-history command-history face-name-history extended-command-history))
(setq grep-files-history '(#("*.el" 0 4 (ivy-index 0))))
(setq grep-regexp-history '("C-Right"))
(setq read-number-history '("80"))
(setq counsel-git-history '(#(".config/i3/scripts/i3exit.sh~" 0 29 (ivy-index 4))))
(setq yes-or-no-p-history '("yes"))
(setq query-replace-history '("find"))
(setq goto-line-history '("1000" "1" "20"))
(setq counsel-describe-symbol-history '(#("^" 0 1 (ivy-index 3431)) "tree-widget-icon-action"))
(setq counsel-locate-history '(#("con" 0 3 (ivy-index 0))))
(setq ivy-history '(#("mkdir 01-first-program" 0 22 (ivy-index 0)) #("ls" 0 2 (ivy-index 0)) #("Dockerfile" 0 10 (ivy-index 0)) #("Do" 0 2 (ivy-index 0)) #("dockerfile-ls" 0 13 (ivy-index 0)) #("heig" 0 4 (ivy-index 1)) #("line-spacin" 0 11 (ivy-index 0))))
(setq swiper-history '("ED" #("EDITOR" 0 6 (ivy-index 0)) #("     buffer_editor: \"\" # command that will be used to edit the current line buffer with ctrl+o, if unset fallback to $env.EDITOR and $env.VISUAL" 0 1 (swiper-line-number 232 display "232 ") 1 144 (fontified nil)) "ED" "ali" #("AutoEn" 0 6 (ivy-index 1)) #(" #AutoEnable=true" 0 1 (swiper-line-number 321 display "321 ") 1 17 (fontified nil)) "card" "define" #("isearch" 0 7 (ivy-index 1)) #(" (define-key isearch-mode-map (kbd \"C-o\") 'isearch-occur)" 0 1 (swiper-line-number 56 display "56 ") 1 16 (fontified t) 16 35 (fontified t) 35 40 (fontified t face font-lock-string-face) 40 57 (fontified t)) #(" Compile command: " 0 1 (ivy-index 0 swiper-line-number 1 display "1 ") 1 18 (ivy-index 0 front-sticky t rear-nonsticky t read-only t face minibuffer-prompt)) "^"))
(setq counsel-M-x-history '(#("^unc" 0 4 (ivy-index 0)) "uncomment-region" #("^rgre" 0 5 (ivy-index 0)) "rgrep" #("^" 0 1 (ivy-index 1)) "pr-ps-file-preview" #("markdown" 0 8 (ivy-index 145)) #("^compil" 0 7 (ivy-index 0)) "compile" #("^make" 0 5 (ivy-index 0)) "make-directory" #("^compile" 0 8 (ivy-index 0)) "compile" #("^dockerfile-ts-mode" 0 19 (ivy-index 0)) "dockerfile-ts-mode" #("^tree" 0 5 (ivy-index 0)) "tree-sitter-mode" #("^switch" 0 7 (ivy-index 0)) "switch-to-buffer-other-frame" #("^treesit-install" 0 16 (ivy-index 0)) "treesit-install-language-grammar" #("^treesit-ins" 0 12 (ivy-index 0)) "treesit-install-language-grammar" "tree-sitter-mode" #("dockerfi" 0 8 (ivy-index 0)) "dockerfile-ts-mode" "flycheck-list-errors" #("^switch-to-" 0 11 (ivy-index 5)) "switch-to-buffer" "switch-to-completions" #("^lsp-install" 0 12 (ivy-index 1)) "lsp-install-server" "dockerfile-ts-mode" #("^comp" 0 5 (ivy-index 0)) "compile" #("^goto" 0 5 (ivy-index 0)) "goto-line" #("^kill-b" 0 7 (ivy-index 2)) "kill-buffer" #("cpp-parse-edit" 0 14 (ivy-index 5)) #("^eval" 0 5 (ivy-index 1)) "eval-buffer" "eval-buffer" #("^eva" 0 4 (ivy-index 1)) "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" #("^eval-" 0 6 (ivy-index 1)) "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "compile"))
(setq which-key-keymap-history '("search-map"))
(setq minibuffer-history '("clang++" "clang" "main" "https://github.com/camdencheek/tree-sitter-dockerfile.git" "define" "no"))
(setq buffer-name-history '(#("docker-compose.yml" 0 18 (ivy-index 1)) #("*Ibuffer*" 0 9 (ivy-index 1)) "*compilation*" "lolo-modules.el" "com" "lolo-modules.el" "*Directory*" "*compilation*" "init.el" "*compilation*"))
(setq compile-history '("git clone git@github.com:void-kun/learngo.git" "pwd" "python ./devscript.py new -d modules -t ivy" "python ./devscript.py new -d ./modules -t c" "python ./devscript.py new -d ./modules -t lisp" "python ./devscript.py new -d ./modules -t programming" "python ./devscript.py new -d ./modules -t emacs-lisp" "python ./devscript.py new -d ./modules -t c" "python ./devscript.py new -d ./modules -t lsp" "python ./devscript.py new -d ./modules -t org" "python ./devscript.py new -d ./modules -t company" "python ./devscript.py new -d ./modules -t vertico" "cd .." "python ./devscript.py new -d ./core -t modules" "python ./devscript.py -d ./core -t modules" "python ./devscript.py new -d ./core -t pinned-packages" "python ./devscript.py -d ./core -t pinned-packages"))
(setq file-name-history '(#("/home/zrik/apps/dotfiles/.config/i3/config" 0 42 (ivy-index 0)) #("/home/zrik/.zshrc" 0 17 (ivy-index 1)) #("/home/zrik/.config/alacritty/" 0 29 (ivy-index 0)) #("/home/zrik/apps/dotfiles/.emacs.d/" 0 34 (ivy-index 0)) #("/home/zrik/.emacs.d/" 0 20 (ivy-index 0)) #("/home/zrik/.config/nushell/env.nu" 0 33 (ivy-index 3)) #("/home/zrik/.config/nushell/" 0 27 (ivy-index 0)) #("/home/zrik/func/self-learn/01-first-program/main.go" 0 51 (ivy-index 3)) #("/home/zrik/func/self-learn/01-first-program/go.mod" 0 50 (ivy-index 2)) #("/home/zrik/func/self-learn/01-first-program/" 0 44 (ivy-index 3)) #("/home/zrik/func/self-learn/" 0 27 (ivy-index 4)) #("/home/zrik/func/external/learngo/01-get-started/osx-installation.md" 0 67 (ivy-index 3)) #("/home/zrik/func/external/learngo/" 0 33 (ivy-index 0)) #("/home/zrik/func/external" 0 24 (ivy-index 0)) #("/home/zrik/func/exernal/" 0 24 (ivy-index 0)) #("/home/zrik/func/" 0 16 (ivy-index 0)) #("/home/zrik/func/void-kun.github.io/" 0 35 (ivy-index 3)) #("/home/zrik/go/" 0 14 (ivy-index 1)) #("/home/zrik/func/luminae/docs/" 0 29 (ivy-index 5)) #("/home/zrik/func/luminae/" 0 24 (ivy-index 0)) #("/home/zrik/func/luminae/pkg/" 0 28 (ivy-index 6)) #("/home/zrik/func/luminae/.env.develop" 0 36 (ivy-index 0)) #("/home/zrik/func/luminae/docker-compose.yml" 0 42 (ivy-index 11)) #("/home/zrik/.config/nushell/config.nu" 0 36 (ivy-index 2)) #("/home/zrik/func/luminae/docker/docker-compose.yml" 0 49 (ivy-index 0)) #("/home/zrik/func/luminae/docs/README.md" 0 38 (ivy-index 4)) #("/home/zrik/dev/" 0 15 (ivy-index 0)) #("/etc/bluetooth/main.conf" 0 24 (ivy-index 0)) #("/home/zrik/apps/dotfiles/gitignore" 0 34 (ivy-index 6)) #("/home/zrik/apps/dotfiles/.config/" 0 33 (ivy-index 0)) #("/home/zrik/apps/" 0 16 (ivy-index 8)) #("/home/zrik/.config/" 0 19 (ivy-index 3)) "~/.config" "~/.emacs.d/" "~/dotfiles/.emacs.d" #("c:/Users/hoang/AppData/Roaming/.emacs.d/core/lolo-editor.el" 0 59 (ivy-index 4)) #("c:/Users/hoang/AppData/Roaming/.emacs.d/core/lolo-custom.el" 0 59 (ivy-index 3)) #("c:/Users/hoang/AppData/Roaming/.emacs.d/core/lolo-mappings.el" 0 61 (ivy-index 5)) #("c:/Users/hoang/AppData/Roaming/.emacs.d/modules/lolo-ivy.el" 0 59 (ivy-index 5)) #("c:/Users/hoang/AppData/Roaming/.emacs.d/modules/lolo-company.el" 0 63 (ivy-index 3)) #("c:/Users/hoang/AppData/Roaming/.emacs.d/core/lolo-ui.el" 0 55 (ivy-index 0)) "~/.emacs.d/" "~/.emacs.d/core/lolo-ui.el" "~/.emacs.d/core/lolo-packages.el" "~/.emacs.d/core/lolo-ui.el" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/" "~/.emacs.d/core/lolo-ui.el" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/modules/lolo-emacs-lisp.el" "~/.emacs.d/modules/lolo-programming.el" "~/.emacs.d/modules/lolo-lisp.el" "~/.emacs.d/" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/modules/lolo-emacs-lisp.el" "~/.emacs.d/modules/lolo-lsp.el" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/modules/lolo-org.el" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/modules/lolo-company.el" "~/.emacs.d/" "~/.emacs.d/core/" "~/.emacs.d/" "~/.emacs.d/core/lolo-modules.el" "~/.emacs.d/modules/lolo-vertico.el" "~/.emacs.d/" "" "~/.emacs.d/core/lolo-mode.el" "~/.emacs.d/core/lolo-pinned-packages.el" "~/.emacs.d/" "~"))
(setq command-history '((uncomment-region (region-beginning) (region-end) nil) (dired "/home/zrik/.config/alacritty/" nil) (rgrep "C-Right" "*.el" "/home/zrik/apps/dotfiles/.emacs.d/") (dired "/home/zrik/.emacs.d/" nil) (dired "/home/zrik/.config/nushell/" nil) (dired "/home/zrik/func/self-learn/" nil) (set-fill-column 80) (dired "/home/zrik/.emacs.d/" nil) (markdown) (dired "/home/zrik/func/external/learngo/" nil) (compile "git clone git@github.com:void-kun/learngo.git" nil) (make-directory "/home/zrik/func/external" t) (compile "git clone git@github.com:void-kun/learngo.git" nil) (dired "/home/zrik/func/" nil) (dired "/home/zrik/func/void-kun.github.io/" nil) (dired "/home/zrik/go/" nil) (list-directory "/home/zrik/func/luminae/docs/" nil) (dired "/home/zrik/func/luminae/" nil) (dockerfile-ts-mode) (tree-sitter-mode 'toggle) (dired "/home/zrik/func/luminae/" nil) (switch-to-buffer-other-frame "docker-compose.yml") (treesit-install-language-grammar 'Dockerfile) (treesit-install-language-grammar 'Do) (tree-sitter-mode 'toggle) (dockerfile-ts-mode) (flycheck-list-errors) (switch-to-buffer "docker-compose.yml" nil 'force-same-window) (switch-to-completions) (lsp-install-server nil) (dockerfile-ts-mode) (dired "/home/zrik/func/luminae/" nil) (dired "/home/zrik/.config/nushell/" nil) (dired "/home/zrik/.config/nushell/config.nu" nil) (dired "/home/zrik/func/luminae/docs/README.md" nil) (dired "/home/zrik/func/luminae/docs/README.md" nil) (dired "/home/zrik/func/luminae/docs/README.md" nil) (dired "/home/zrik/dev/" nil) (dired "/etc/bluetooth/main.conf" nil) (dired "/home/zrik/func/luminae/docs/" nil) (dired "/home/zrik/func/luminae/" nil) (dired "/home/zrik/func/luminae/" nil) (dired "/home/zrik/apps/dotfiles/.config/" nil) (dired "/home/zrik/apps/dotfiles/.config/" nil) (dired "/home/zrik/apps/" nil) (list-directory "/home/zrik/apps/" nil) (dired "~/.emacs.d/" nil) (compile "pwd" nil) (goto-line 1 nil) (goto-line 20 nil) (kill-buffer "*Ibuffer*") (align-regexp 1 15 "\\(\\s-*\\)define" 1 1) (cpp-parse-edit) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (eval-buffer) (compile "" nil) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (compile "python ./devscript.py new -d modules -t ivy" nil) (execute-extended-command nil "compile" "compile") (dired "~/.emacs.d/" nil) (ivy-imenu-anywhere) (execute-extended-command nil "ivy-imenu-anywhere" "iv") (dired "~/.emacs.d/" nil) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-bu") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-bu") (find-file "~/.emacs.d/core/lolo-ui.el" t) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-bu") (find-file "~/.emacs.d/core/lolo-packages.el" t) (find-file "~/.emacs.d/core/lolo-ui.el" t) (find-file "~/.emacs.d/core/lolo-modules.el" t) (dired "~/.emacs.d/" nil) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (which-key-show-full-keymap 'search-map) (execute-extended-command nil "which-key-show-full-keymap" "which-key-show-full-ke") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-bu") (dired "~/.emacs.d/" nil) (ivy-imenu-anywhere) (execute-extended-command nil "ivy-imenu-anywhere" "iv")))
(setq extended-command-history '("eval-buffer" "compile" "ivy-imenu-anywhere" "eval-buffer" "which-key-show-full-keymap" "eval-buffer" "ivy-imenu-anywhere" "menu-bar-mode" "compile" "lisp-mode" "compile" "switch-to-buffer-other-window" "compile" "dired-jump" "dired-goto-subdir" "switch-to-buffer-other-window" "kill-buffer-and-window" "compile" "switch-to-buffer-other-window" "compile" "switch-to-buffer-other-window" "compile" "switch-to-buffer-other-window" "compile" "windmove-mode" "compile" "menu-bar-mode" "font-show-log" "customize-face"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq search-ring '(#("pre" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("prelude" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("lolo" 0 4 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq regexp-search-ring '("EDITOR" "AutoEn" "isearch" #("pre" 0 3 (isearch-case-fold-search t))))
